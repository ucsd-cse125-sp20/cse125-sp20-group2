syntax = "proto2";

package Game;

enum Net {
    PING = 0;
    PONG = 1;
}

enum Direction {
    UP = 0;
    DOWN = 1;
    LEFT = 2;
    RIGHT = 3;
}

message ReadyState {
    required bool ready = 1;
}

message CookEvent {
    required uint32 objectId = 1;
}

message ClientMessage {
    oneof event {
        Net net = 1;
        Direction direction = 2;
        ReadyState ready = 3;
        CookEvent cookEvent = 4;
    }
}

message ServerMessage {
    oneof event {
        Net net = 1;
        Object object = 2;
        Score score = 3;
        Inventory inventory = 4;
        ClientInfo clientInfo = 5;
        TimeUpdate time = 6;
        RoundInfo round = 7;
        RoundWin win = 8;
        ValidateCooking validCook = 9;
        InstructionInfo instruction = 10;
        DisconnectInfo disconnect = 11;
    }
}

enum ObjectType {
    OBJECT = 0;
    PLAYER = 1;
    INGREDIENT = 2;
    COOKWARE = 3;
    WALL = 4;
    TABLE = 5;
    PLATE = 6;
}

message InstructionInfo {
    required string instructionMsg = 1;
    required uint32 index = 2;
    optional string recipeName = 3;
}

message Object {
    required Vector3 worldPosition = 1; 
    required float rotation = 2;
    required uint32 id = 3;
    required ObjectType type = 4;
    required bool render = 5 [default = true];
    required string modelPath = 6 [default = ""];
    optional Vector3 scale = 7;
    optional uint32 quality = 8;
}

message Score {
    required int32 currScore = 1;
}

message Vector3 {
    required float x = 1 [default = 1];
    required float y = 2 [default = 0];
    required float z = 3 [default = 1];
}

message Inventory {
    required uint32 id = 1;
    required bool add = 2 [default = true];
    required string name = 3 [default = ""];
    required string ingredientStatus = 4 [default = "Raw"];
    required uint32 qualityIndex = 5;
}

message ClientInfo {
    required uint32 clientId = 1;
    required uint32 objectId = 2;
}

message TimeUpdate {
    required uint32 seconds = 1;
}

message RoundInfo {
    required RoundState type = 1;

    enum RoundState {
        LOBBY = 0;
        DUNGEON_WAITING = 1;
        DUNGEON = 2;
        KITCHEN_WAITING = 3;
        KITCHEN = 4;
        END = 5;
    }
}

message RoundWin {
    required uint32 clientId = 1;
}

message ValidateCooking {
    required string message = 1;
    required bool valid = 2;
}

message DisconnectInfo {
    required string message = 1;
}